{"version":3,"sources":["components/useJsonFetch.js","components/HookJsonFetch.js","App.js","reportWebVitals.js","index.js"],"names":["useJsonFetch","url","opts","useState","data","setData","error","setError","loading","setLoading","useEffect","a","fetch","response","ok","Error","statusText","json","fetchData","HookJsonFetch","className","status","App","process","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PA2BeA,EAzBM,SAACC,EAAKC,GAAU,IAAD,EACVC,mBAAS,MADC,mBAC3BC,EAD2B,KACrBC,EADqB,OAERF,mBAAS,MAFD,mBAE3BG,EAF2B,KAEpBC,EAFoB,OAGJJ,oBAAS,GAHL,mBAG3BK,EAH2B,KAGlBC,EAHkB,KAsBlC,OAjBAC,qBAAU,YACO,uCAAG,8BAAAC,EAAA,6DAChBF,GAAW,GADK,kBAGSG,MAAMX,GAHf,WAGRY,EAHQ,QAIAC,GAJA,sBAIU,IAAIC,MAAMF,EAASG,YAJ7B,uBAKKH,EAASI,OALd,OAKRb,EALQ,OAMdC,EAAQD,GACRG,EAAS,MAPK,kDASdA,EAAS,EAAD,IATM,yBAWdE,GAAW,GAXG,6EAAH,qDAcfS,KACC,CAACjB,IACG,CAACG,EAAME,EAAOE,I,OCVRW,MAXf,YAAiC,IAARlB,EAAO,EAAPA,IAAO,EACCD,EAAaC,GADd,mBACvBG,EADuB,KACjBE,EADiB,KACVE,EADU,KAE9B,OACE,sBAAKY,UAAU,aAAf,UACGhB,GAAQ,kCAAKA,EAAKiB,UAClBb,GAAW,yCACXF,GAAS,2CCSDgB,MAdf,WACE,OACE,qBAAKF,UAAU,MAAf,SACE,qBAAKA,UAAU,eAAf,SACE,sBAAKA,UAAU,cAAf,UACE,cAAC,EAAD,CAAenB,IAAKsB,+BACpB,cAAC,EAAD,CAAetB,IAAKsB,gCACpB,cAAC,EAAD,CAAetB,IAAKsB,0CCCfC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.af2a9d12.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useJsonFetch = (url, opts) => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch(url);\n        if (!response.ok) throw new Error(response.statusText);\n        const data = await response.json();\n        setData(data);\n        setError(null);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [url]);\n  return [data, error, loading];\n};\n\nexport default useJsonFetch;\n","import React from \"react\";\nimport useJsonFetch from \"./useJsonFetch\";\n\nfunction HookJsonFetch({ url }) {\n  const [data, error, loading] = useJsonFetch(url);\n  return (\n    <div className=\"ui segment\">\n      {data && <p> {data.status}</p>}\n      {loading && <p> Loading</p>}\n      {error && <p> Error</p>}\n    </div>\n  );\n}\n\nexport default HookJsonFetch;\n","import React from \"react\";\nimport \"./App.css\";\nimport HookJsonFetch from \"./components/HookJsonFetch\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"ui container\">\n        <div className=\"ui segments\">\n          <HookJsonFetch url={process.env.REACT_APP_DATA_URL} />\n          <HookJsonFetch url={process.env.REACT_APP_ERROR_URL} />\n          <HookJsonFetch url={process.env.REACT_APP_LOADING_URL} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}